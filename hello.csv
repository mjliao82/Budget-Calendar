This is Mike, and here are the set up instructions for the envionment.

Everything backend will be in Python 3.9.13, u can download it in vscode or the offical website. 

Ryan and I had trouble coding in different versions and it caused a lot of unnecessary trouble
To ensure the version consistency, we'll be using a virtual environment called virtualenv 

It sounds ode but I promise it will save us from a lot of dumb stuff
It is also not that ode at all

To open terminal in vscode if you're using it, press: control  ` 

open terminal and type: pip install virtualenv 
once it's installed, type: virtualenv budenv            #budenv is the name of the virutal environment for the project

I don't think you need to reinitialize the virtualenv but if needed, 
virtualenv -p python3.9 budenv  
this ensures 3.9.13 if you had already downloaded in your computer

I think you only have to activate it

Now that's set up, all u have to do when you reopen the project anywhere is to activate it,
To activate it, type: source/budenv/bin/activate

We need to activate it because that's where all of the built in packages will be installed in
Note that whatever we install, say pandas or flask/react whatever, it will only be in the virtual environment, not in your local machine.

We'll experiment with flask as the backend tool for now, so install flask is a must.
In budenv in terminal, type: pip install flask flask-sqlalchemy. 
If it is already importing with no problem, no need for that.

If it is activated, you should see (budenv) on the path on your command line.

take a break, that was ode amount of info. 

For future imports, if the packages is not installed, it will bug out, just pip it in command line.
In the terminal, type: pip install PackageName  #just make sure it's in virtualenv 


To commit to github after u clone the repo:
git add .
git commit -m "comment"
git push 


Thank you, happy hacking,

Michael